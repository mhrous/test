{"version":3,"sources":["components/authentication/register/RegisterAmplify.tsx","pages/authentication/Register.tsx"],"names":["RegisterAmplify","props","mounted","useMounted","navigate","useNavigate","register","useAuth","initialValues","email","password","phoneNumber","policy","submit","validationSchema","Yup","shape","max","required","min","oneOf","onSubmit","values","a","setErrors","setStatus","setSubmitting","state","username","console","error","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","alignItems","display","ml","mt","Checkbox","checked","color","Typography","Link","component","href","FormHelperText","Button","disabled","size","Register","backgroundColor","minHeight","Container","maxWidth","py","Card","background","boxShadow","CardContent","flexDirection","p","justifyContent","mb","gutterBottom","height","maxHeight","width","flexGrow","Divider","my","RouterLink","to","underline","LoginIllustration"],"mappings":"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","file":"static/js/9.2f839110.chunk.js","sourcesContent":["import type { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst RegisterAmplify: FC = (props) => {\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const { register } = useAuth() as any;\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          phoneNumber: '',\n          policy: true,\n          submit: null\n        }}\n        validationSchema={\n          Yup\n            .object()\n            .shape({\n              email: Yup\n                .string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              phoneNumber: Yup\n                .string()\n                .max(255)\n                .required('Phone Number is required'),\n              password: Yup\n                .string()\n                .min(7)\n                .max(255)\n                .required('Password is required'),\n              policy: Yup\n                .boolean()\n                .oneOf([true], 'This field must be checked')\n            })\n        }\n        onSubmit={async (values, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }): Promise<void> => {\n          try {\n            await register(values.email, values.password);\n\n            navigate('/authentication/verify-code', {\n              state: {\n                username: values.email\n              }\n            });\n          } catch (err) {\n            console.error(err);\n            if (mounted.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }): JSX.Element => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            {...props}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n              fullWidth\n              helperText={touched.phoneNumber && errors.phoneNumber}\n              label=\"Phone Number\"\n              margin=\"normal\"\n              name=\"PhoneNumber\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"string\"\n              value={values.phoneNumber}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                ml: -1,\n                mt: 2\n              }}\n            >\n              <Checkbox\n                checked={values.policy}\n                color=\"primary\"\n                name=\"policy\"\n                onChange={handleChange}\n              />\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                I have read the\n                {' '}\n                <Link\n                  color=\"primary\"\n                  component=\"a\"\n                  href=\"#\"\n                >\n                  Terms and Conditions\n                </Link>\n              </Typography>\n            </Box>\n            {Boolean(touched.policy && errors.policy) && (\n              <FormHelperText error>\n                {errors.policy}\n              </FormHelperText>\n            )}\n            {errors.submit && (\n              <Box sx={{ mt: 3 }}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n            <Box sx={{ mt: 2 }}>\n              <Button\n                color=\"primary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Register\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterAmplify;\n","import type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Container,\n  Divider,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport {\n  RegisterAmplify,\n} from '../../components/authentication/register';\nimport LoginIllustration from 'src/icons/LoginIllustration';\n\nconst Register: FC = () => (\n  <>\n    <Helmet>\n      <title>Register | Material Kit Pro</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        minHeight: '100vh'\n      }}\n    >\n      <Box>\n        <Container\n          maxWidth=\"sm\"\n          sx={{ py: '10px' }}\n        >\n          <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\n            <CardContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                p: 4\n              }}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 3\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                  >\n                    Register\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Register on the internal platform\n                  </Typography>\n                </div>\n                <Box\n                  sx={{\n                    height: 32,\n                    '& > img': {\n                      maxHeight: '100%',\n                      width: 'auto'\n                    }\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  flexGrow: 1,\n                  mt: 3\n                }}\n              >\n                <RegisterAmplify />\n              </Box>\n              <Divider sx={{ my: 3 }} />\n              <Link\n                color=\"textSecondary\"\n                component={RouterLink}\n                to=\"/authentication/login\"\n                variant=\"body2\"\n                underline=\"none\"\n              >\n                Having an account\n              </Link>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n      <Box>\n        <LoginIllustration />\n      </Box>\n    </Box>\n  </>\n);\n\nexport default Register;\n"],"sourceRoot":""}