{"version":3,"sources":["hooks/useMounted.ts","components/authentication/password-recovery/PasswordRecoveryAmplify.tsx","pages/authentication/PasswordRecovery.tsx"],"names":["useMounted","isMounted","useRef","useEffect","current","PasswordRecoveryAmplify","mounted","passwordRecovery","useAuth","navigate","useNavigate","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","state","username","console","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","PasswordRecovery","platform","backgroundColor","display","flexDirection","minHeight","Container","maxWidth","py","justifyContent","mb","Card","background","boxShadow","CardContent","p","alignItems","Typography","gutterBottom","height","maxHeight","width","flexGrow"],"mappings":"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","file":"static/js/5.63e87f94.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\nimport type { MutableRefObject } from 'react';\n\nconst useMounted = (): MutableRefObject<boolean> => {\n  const isMounted = useRef(true);\n\n  useEffect(() => (): void => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useMounted;\n","import type { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst PasswordRecoveryAmplify: FC = () => {\n  const mounted = useMounted();\n  const { passwordRecovery } = useAuth() as any;\n  const navigate = useNavigate();\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        submit: null\n      }}\n      validationSchema={\n        Yup\n          .object()\n          .shape({\n            email: Yup\n              .string()\n              .email('Must be a valid email')\n              .max(255)\n              .required('Email is required')\n          })\n      }\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }): Promise<void> => {\n        try {\n          await passwordRecovery(values.email);\n\n          navigate('/authentication/password-reset', {\n            state: {\n              username: values.email\n            }\n          });\n        } catch (err) {\n          console.error(err);\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }): JSX.Element => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            autoFocus\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 3 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Recover Password\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default PasswordRecoveryAmplify;\n","import type { FC } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Container,\n  Typography\n} from '@material-ui/core';\nimport { PasswordRecoveryAmplify } from '../../components/authentication/password-recovery';\nimport useAuth from '../../hooks/useAuth';\n\nconst PasswordRecovery: FC = () => {\n  const { platform } = useAuth() as any;\n\n  return (\n    <>\n      <Helmet>\n        <title>Password Recovery | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: '100vh'\n        }}\n      >\n        <Container\n          maxWidth=\"sm\"\n          sx={{ py: 10 }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          />\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 8\n            }}\n          />\n          <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\n            <CardContent\n              sx={{\n                display: 'flex',\n                flexDirection: 'column',\n                p: 4\n              }}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 3\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                  >\n                    Password Recovery\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Tell us your email so we can send you a reset link\n                  </Typography>\n                </div>\n                <Box\n                  sx={{\n                    height: 32,\n                    '& > img': {\n                      maxHeight: '100%',\n                      width: 'auto'\n                    }\n                  }}\n                />\n              </Box>\n              <Box\n                sx={{\n                  flexGrow: 1,\n                  mt: 3\n                }}\n              >\n                {platform === 'Amplify' && <PasswordRecoveryAmplify />}\n              </Box>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default PasswordRecovery;\n"],"sourceRoot":""}