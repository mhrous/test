{"version":3,"sources":["components/authentication/login/LoginAmplify.tsx","pages/authentication/Login.tsx"],"names":["LoginAmplify","props","mounted","useMounted","navigate","useNavigate","login","useAuth","initialValues","email","phoneNumber","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","setErrors","setStatus","setSubmitting","current","success","console","error","code","state","username","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","autoFocus","Boolean","fullWidth","helperText","label","margin","name","onBlur","onChange","type","value","variant","Box","sx","mt","FormHelperText","Button","color","disabled","size","Login","platform","backgroundColor","display","justifyContent","flexWrap","minHeight","Container","maxWidth","py","Card","background","boxShadow","CardContent","flexDirection","p","alignItems","mb","Typography","gutterBottom","height","maxHeight","width","flexGrow","pt","Link","component","RouterLink","to","underline","Checkbox","LoginIllustration"],"mappings":"kTA6JeA,EAhJU,SAACC,GACxB,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAUC,cAAVD,MAER,OACE,cAAC,IAAD,CACEE,cAAe,CACbC,MAAO,eACPC,YAAa,aACbC,SAAU,eACVC,OAAQ,MAEVC,iBACEC,MAEGC,MAAM,CACLN,MAAOK,MAEJL,MAAM,yBACNO,IAAI,KACJC,SAAS,qBACZP,YAAaI,MAEVE,IAAI,KACJC,SAAS,4BACZN,SAAUG,MAEPE,IAAI,KACJC,SAAS,uBAGlBC,SAAQ,uCAAE,WAAOC,EAAP,sBAAAC,EAAA,6DACRC,EADQ,EACRA,UACAC,EAFQ,EAERA,UACAC,EAHQ,EAGRA,cAHQ,kBAMAjB,EAAMa,EAAOV,MAAOU,EAAOR,UAN3B,OAQFT,EAAQsB,UACVF,EAAU,CAAEG,SAAS,IACrBF,GAAc,IAVV,mDAaNG,QAAQC,MAAR,MAEiB,8BAAb,KAAIC,KAfF,wBAgBJxB,EAAS,8BAA+B,CACtCyB,MAAO,CACLC,SAAUX,EAAOV,SAlBjB,2BAwBFP,EAAQsB,UACVF,EAAU,CAAEG,SAAS,IACrBJ,EAAU,CAAET,OAAQ,KAAImB,UACxBR,GAAc,IA3BV,yDAAF,wDA1BV,SA0DG,gBACCS,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACAlB,EAPD,EAOCA,OAPD,OASC,+CACEmB,YAAU,EACVpB,SAAUiB,GACNlC,GAHN,cAKE,cAACsC,EAAA,EAAD,CACEC,WAAS,EACTb,MAAOc,QAAQJ,EAAQ5B,OAASuB,EAAOvB,OACvCiC,WAAS,EACTC,WAAYN,EAAQ5B,OAASuB,EAAOvB,MACpCmC,MAAM,gBACNC,OAAO,SACPC,KAAK,QACLC,OAAQd,EACRe,SAAUd,EACVe,KAAK,QACLC,MAAO/B,EAAOV,MACd0C,QAAQ,aAEV,cAACZ,EAAA,EAAD,CACEC,WAAS,EACTb,MAAOc,QAAQJ,EAAQ3B,aAAesB,EAAOtB,aAC7CgC,WAAS,EACTC,WAAYN,EAAQ3B,aAAesB,EAAOtB,YAC1CkC,MAAM,eACNC,OAAO,SACPC,KAAK,cACLC,OAAQd,EACRe,SAAUd,EACVe,KAAK,cACLC,MAAO/B,EAAOT,YACdyC,QAAQ,aAEV,cAACZ,EAAA,EAAD,CACEZ,MAAOc,QAAQJ,EAAQ1B,UAAYqB,EAAOrB,UAC1C+B,WAAS,EACTC,WAAYN,EAAQ1B,UAAYqB,EAAOrB,SACvCiC,MAAM,WACNC,OAAO,SACPC,KAAK,WACLC,OAAQd,EACRe,SAAUd,EACVe,KAAK,WACLC,MAAO/B,EAAOR,SACdwC,QAAQ,aAETnB,EAAOpB,QACN,cAACwC,EAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAgB5B,OAAK,EAArB,SACGK,EAAOpB,WAId,cAACwC,EAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,GAAf,SACE,cAACE,EAAA,EAAD,CACEC,MAAM,UACNC,SAAUtB,EACVM,WAAS,EACTiB,KAAK,QACLV,KAAK,SACLE,QAAQ,YANV,8B,SCFGS,UAxHG,WAAO,IACfC,EAAatD,cAAbsD,SAER,OACE,qCACE,cAAC,IAAD,UACE,4CAEF,eAACT,EAAA,EAAD,CACEC,GAAI,CACFS,gBAAiB,qBACjBC,QAAS,OACTC,eAAgB,gBAChBC,SAAU,OACVC,UAAW,SANf,UASE,cAACd,EAAA,EAAD,UACE,cAACe,EAAA,EAAD,CACEC,SAAS,KACTf,GAAI,CAAEgB,GAAI,QAFZ,SAIE,cAACC,EAAA,EAAD,CAAMjB,GAAI,CAAEkB,WAAY,kBAAmBC,UAAW,mBAAtD,SACE,eAACC,EAAA,EAAD,CACEpB,GAAI,CACFU,QAAS,OACTW,cAAe,SACfC,EAAG,GAJP,UAOE,eAACvB,EAAA,EAAD,CACEC,GAAI,CACFuB,WAAY,SACZb,QAAS,OACTC,eAAgB,gBAChBa,GAAI,GALR,UAQE,gCACE,cAACC,EAAA,EAAD,CACErB,MAAM,cACNsB,cAAY,EACZ5B,QAAQ,KAHV,sBAOA,cAAC2B,EAAA,EAAD,CACErB,MAAM,gBACNN,QAAQ,QAFV,gDAOF,cAACC,EAAA,EAAD,CACEC,GAAI,CACF2B,OAAQ,GACR,UAAW,CACTC,UAAW,OACXC,MAAO,cAKf,cAAC9B,EAAA,EAAD,CACEC,GAAI,CACF8B,SAAU,EACV7B,GAAI,GAHR,SAME,cAAC,EAAD,MAEY,YAAbO,GACD,eAACT,EAAA,EAAD,CAAKC,GAAI,CACP+B,GAAI,EACJrB,QAAS,OACTC,eAAgB,gBAChBY,WAAY,UAJd,UAOE,cAACxB,EAAA,EAAD,UACE,cAACiC,EAAA,EAAD,CACE5B,MAAM,gBACN6B,UAAWC,IACXC,GAAG,oCACHrC,QAAQ,QACRsC,UAAU,OALZ,+BAUF,eAACrC,EAAA,EAAD,CACEC,GAAI,CACFU,QAAS,OACTC,eAAgB,gBAChBY,WAAY,UAJhB,UAOE,cAACc,EAAA,EAAD,IACA,cAACZ,EAAA,EAAD,CACErB,MAAM,gBACNN,QAAQ,QAFV,wCAcZ,cAACC,EAAA,EAAD,UACE,cAACuC,EAAA,EAAD","file":"static/js/8.67be7ba1.chunk.js","sourcesContent":["import type { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport useMounted from '../../../hooks/useMounted';\n\nconst LoginAmplify: FC = (props) => {\n  const mounted = useMounted();\n  const navigate = useNavigate();\n  const { login } = useAuth() as any;\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'test@test.io',\n        phoneNumber: '+106777533',\n        password: 'Password123!',\n        submit: null\n      }}\n      validationSchema={\n        Yup\n          .object()\n          .shape({\n            email: Yup\n              .string()\n              .email('Must be a valid email')\n              .max(255)\n              .required('Email is required'),\n            phoneNumber: Yup\n              .string()\n              .max(255)\n              .required('Phone number is required'),\n            password: Yup\n              .string()\n              .max(255)\n              .required('Email is required')\n          })\n      }\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }): Promise<void> => {\n        try {\n          await login(values.email, values.password);\n\n          if (mounted.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n\n          if (err.code === 'UserNotConfirmedException') {\n            navigate('/authentication/verify-code', {\n              state: {\n                username: values.email\n              }\n            });\n            return;\n          }\n\n          if (mounted.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }): JSX.Element => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <TextField\n            autoFocus\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            autoFocus\n            error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n            fullWidth\n            helperText={touched.phoneNumber && errors.phoneNumber}\n            label=\"Phone number\"\n            margin=\"normal\"\n            name=\"phoneNumber\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"phoneNumber\"\n            value={values.phoneNumber}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box sx={{ mt: 3 }}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box sx={{ mt: 2 }}>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginAmplify;\n","/* eslint-disable jsx-a11y/alt-text */\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Checkbox,\n  Card,\n  CardContent,\n  Container,\n  Link,\n  Typography\n} from '@material-ui/core';\n// import AuthBanner from '../../components/authentication/AuthBanner';\nimport { LoginAmplify } from '../../components/authentication/login';\nimport useAuth from '../../hooks/useAuth';\nimport LoginIllustration from 'src/icons/LoginIllustration';\n\nconst Login: FC = () => {\n  const { platform } = useAuth() as any;\n\n  return (\n    <>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n          minHeight: '100vh'\n        }}\n      >\n        <Box>\n          <Container\n            maxWidth=\"sm\"\n            sx={{ py: '80px' }}\n          >\n            <Card sx={{ background: 'none !important', boxShadow: 'none !important' }}>\n              <CardContent\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  p: 4,\n                }}\n              >\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mb: 3\n                  }}\n                >\n                  <div>\n                    <Typography\n                      color=\"textPrimary\"\n                      gutterBottom\n                      variant=\"h4\"\n                    >\n                      Sign Ins\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      Log in on the internal platform\n                    </Typography>\n                  </div>\n                  <Box\n                    sx={{\n                      height: 32,\n                      '& > img': {\n                        maxHeight: '100%',\n                        width: 'auto'\n                      }\n                    }}\n                  />\n                </Box>\n                <Box\n                  sx={{\n                    flexGrow: 1,\n                    mt: 3\n                  }}\n                >\n                  <LoginAmplify />\n                </Box>\n                {platform === 'Amplify' && (\n                <Box sx={{\n                  pt: 1,\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center'\n                }}\n                >\n                  <Box>\n                    <Link\n                      color=\"textSecondary\"\n                      component={RouterLink}\n                      to=\"/authentication/password-recovery\"\n                      variant=\"body2\"\n                      underline=\"none\"\n                    >\n                      Forgot password\n                    </Link>\n                  </Box>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <Checkbox />\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      Remember me\n                    </Typography>\n\n                  </Box>\n                </Box>\n                )}\n              </CardContent>\n            </Card>\n          </Container>\n        </Box>\n        <Box>\n          <LoginIllustration />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}